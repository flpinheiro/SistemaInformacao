// <auto-generated />
using System;
using BusExpress.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusExpress.Repository.Migrations
{
    [DbContext(typeof(BusExpressContext))]
    partial class BusExpressContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("BusExpress")
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusExpress.Model.Bus", b =>
                {
                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CompanyId", "LicensePlate");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("BusExpress.Model.BusLine", b =>
                {
                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("DotNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RouteName")
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("RouteUserId")
                        .HasColumnType("int");

                    b.HasKey("Number", "DotNumber");

                    b.HasIndex("RouteUserId", "RouteName");

                    b.ToTable("BusLines");
                });

            modelBuilder.Entity("BusExpress.Model.BusStop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Latitude")
                        .HasColumnType("real");

                    b.Property<float>("Longitude")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasAlternateKey("Latitude", "Longitude")
                        .HasName("Location");

                    b.ToTable("BusStops");
                });

            modelBuilder.Entity("BusExpress.Model.BusStopLine", b =>
                {
                    b.Property<int>("BusStopId")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("DotNumber")
                        .HasColumnType("int");

                    b.HasKey("BusStopId", "Number", "DotNumber");

                    b.HasIndex("Number", "DotNumber");

                    b.ToTable("BusStopLine");
                });

            modelBuilder.Entity("BusExpress.Model.Card", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("BusExpress.Model.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("BusExpress.Model.Route", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.Property<DateTime?>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EndPointId")
                        .HasColumnType("int");

                    b.Property<int>("StartPointId")
                        .HasColumnType("int");

                    b.Property<int?>("UserRoteRoutesId")
                        .HasColumnType("int");

                    b.Property<int?>("UserRoteUserId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "Name");

                    b.HasIndex("EndPointId");

                    b.HasIndex("StartPointId");

                    b.HasIndex("UserRoteUserId", "UserRoteRoutesId");

                    b.ToTable("Route");
                });

            modelBuilder.Entity("BusExpress.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserRoteRoutesId")
                        .HasColumnType("int");

                    b.Property<int?>("UserRoteUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserRoteUserId", "UserRoteRoutesId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BusExpress.Model.UserRote", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoutesId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoutesId");

                    b.ToTable("UserRote");
                });

            modelBuilder.Entity("BusExpress.Model.Bus", b =>
                {
                    b.HasOne("BusExpress.Model.Company", "Company")
                        .WithMany("Bus")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusExpress.Model.BusLine", b =>
                {
                    b.HasOne("BusExpress.Model.Route", null)
                        .WithMany("Lines")
                        .HasForeignKey("RouteUserId", "RouteName");
                });

            modelBuilder.Entity("BusExpress.Model.BusStopLine", b =>
                {
                    b.HasOne("BusExpress.Model.BusStop", "BusStop")
                        .WithMany("BusStopLine")
                        .HasForeignKey("BusStopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusExpress.Model.BusLine", "BusLine")
                        .WithMany("BusStopLine")
                        .HasForeignKey("Number", "DotNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusExpress.Model.Card", b =>
                {
                    b.HasOne("BusExpress.Model.User", "User")
                        .WithOne("Card")
                        .HasForeignKey("BusExpress.Model.Card", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusExpress.Model.Route", b =>
                {
                    b.HasOne("BusExpress.Model.BusStop", "EndPoint")
                        .WithMany()
                        .HasForeignKey("EndPointId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BusExpress.Model.BusStop", "StartPoint")
                        .WithMany()
                        .HasForeignKey("StartPointId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BusExpress.Model.User", "User")
                        .WithMany("Routes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusExpress.Model.UserRote", null)
                        .WithMany("Route")
                        .HasForeignKey("UserRoteUserId", "UserRoteRoutesId");
                });

            modelBuilder.Entity("BusExpress.Model.User", b =>
                {
                    b.HasOne("BusExpress.Model.UserRote", null)
                        .WithMany("User")
                        .HasForeignKey("UserRoteUserId", "UserRoteRoutesId");
                });
#pragma warning restore 612, 618
        }
    }
}
